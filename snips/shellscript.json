{
  "AWS appsec start2": {
    "prefix": "aws_app_start2",
    "body": [
      "#!/bin/bash",
      "",
      "sudo chown -R ${1:user} /home/${1:user}/${2:appName}",
      "",
      "cd /home/${1:user}/${2:appName}",
      "",
      "sudo export NVM_DIR=\"HOME/.nvm\"",
      "  [ -s \"NVM_DIR/nvm.sh\" ] && \\. \"NVM_DIR/nvm.sh\"  # This loads nvm",
      "  [ -s \"NVM_DIR/bash_completion\" ] && \\. \"NVM_DIR/bash_completion\"  # This loads nvm bash_completion",
      "",
      ". /home/${1:user}/.nvm/nvm.sh",
      "",
      "nvm install 16.17.1",
      "npm install",
      "npm install -g typescript",
      "",
      "npm run build",
      "",
      "sudo chmod +x /home/${1:user}/${2:appName}/start.sh ",
      "",
      "sudo systemctl daemon-reload",
      "",
      "sudo service ${2:appName} start",
      "",
      "sudo systemctl enable ${2:appName}"
    ],
    "description": "AWS appsec start2"
  },
  "AWS appsec before2": {
    "prefix": "aws_app_before2",
    "body": [
      "#!/bin/bash",
      "",
      "# Download nvm and node",
      "curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash",
      ". ~/.nvm/nvm.sh",
      "",
      "# create working directory if it doesn't exist",
      "DIR=\"/home/${1:user}/${2:appName}\"",
      "",
      "if [ -d \"DIR\" ]; then",
      "    echo \"DIR\" exists",
      "else",
      "    echo \"Creating DIR directory\"",
      "    sudo mkdir DIR",
      "fi"
    ],
    "description": "AWS appsec before2"
  },
  "AWS appsec stop2": {
    "prefix": "aws_app_stop2",
    "body": [
      "#!/bin/bash",
      "",
      "# kill running instances of node",
      "",
      "isNode='ps -ef | grep node'",
      "",
      "if [ $isNode -eq 0 ]; then",
      "    echo \"Stopping all instances of node\"",
      "    pkill -f node",
      "fi"
    ],
    "description": "AWS appsec stop2"
  },
  "AWS node start": {
    "prefix": "aws_node_start",
    "body": [
      "#!/bin/bash",
      "cd /home/${1:user}/${2:appName}",
      ". /home/${1:user}/.nvm/nvm.sh",
      "nvm use ${3:version}",
      "npm start"
    ],
    "description": "AWS node start"
  },
  "AWS appsec stop": {
    "prefix": "aws_app_stop",
    "body": [
      "#!/bin/bash",
      "",
      "# kill running instances of node",
      "",
      "pm2 delete ${1:appName}",
      ""
    ],
    "description": "AWS appsec stop"
  },
  "AWS appsec before": {
    "prefix": "aws_app_before",
    "body": [
      "#!/bin/bash",
      "",
      "curl -fsSL https://deb.nodesource.com/setup_${1:node_version}.x | sudo -E bash -",
      "sudo apt-get install nodejs",
      "",
      "# create working directory if it doesn't exist",
      "DIR=\"/home/${2:user}/${3:appName}\"",
      "",
      "if [ -d \"\\$DIR\" ]; then",
      "    echo \"\\${DIR}\" exists",
      "else",
      "    echo \"Creating ${DIR} directory\"",
      "    mkdir \\${DIR}",
      "fi"
    ],
    "description": "AWS appsec before"
  },
  "AWS appsec start": {
    "prefix": "aws_app_start",
    "body": [
      "cd /home/${1:user}/${2:appName}",
      "",
      "npm install",
      "npm install -g typescript",
      "npm install -g pm2",
      "",
      "npm run build ",
      "",
      "printf '",
      "{",
      "  \"apps\": [",
      "    {",
      "      \"name\": \"${2:appName}\",",
      "      \"cwd\": \"/home/${1:user}/${2:appName}/build/src\",",
      "      \"script\": \"server.js\",",
      "      \"env\": {",
      "        \"PORT\": 8080,",
      "        ${3:env_variables}",
      "      }",
      "    }",
      "  ]",
      "}",
      "' >> /home/${1:user}/${2:appName}-env.json",
      "",
      "sudo pm2 start /home/${1:user}/${2:appName}-env.json",
      "",
      "sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ${1:user} --hp /home/${1:user}",
      "",
      "sudo pm2 save"
    ],
    "description": "AWS appsec start"
  },
  "AWS EC2 launch temp": {
    "prefix": "aws_ec2_launch_temp",
    "body": [
      "#!/bin/bash",
      "sudo apt -y update",
      "sudo apt -y install git",
      "sudo apt -y install wget",
      "# Download nvm and node",
      "curl -fsSL https://deb.nodesource.com/setup_${1:node_version}.x | sudo -E bash -",
      "sudo apt-get install nodejs",
      "sudo apt-get install net-tools",
      "",
      "cd /home/${2:user}",
      "",
      "printf '",
      "{",
      "  \"apps\": [",
      "    {",
      "      \"name\": \"${3:appName}\",",
      "      \"cwd\": \"/home/${2:user}/${3:appName}/build/src\",",
      "      \"script\": \"server.js\",",
      "      \"env\": {",
      "        \"PORT\": 8080,",
      "        ${4:env_variables}",
      "      }",
      "    }",
      "  ]",
      "}",
      "' >> /home/${2:user}/${3:appName}-env.json",
      "",
      "git clone https://hazelnaurt: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@github.com/coindus/shoalin.git ${3:appName}",
      "",
      "cd ${3:appName}",
      "",
      "sudo chown -R ${2:user} /home/${2:user}/${3:appName}",
      "",
      "npm install",
      "npm install -g typescript",
      "npm install -g pm2",
      "",
      "npm run build ",
      "",
      "sudo pm2 start /home/${2:user}/${3:appName}-env.json",
      "",
      "sudo env PATH=$PATH:/usr/bin /usr/lib/node_modules/pm2/bin/pm2 startup systemd -u ${2:user} --hp /home/${2:user}",
      "",
      "sudo pm2 save"
    ],
    "description": "AWS EC2 launch temp"
  }
}
